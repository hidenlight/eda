from flask import Flask
app = Flask(__name__)

@app.route('/')
def home():
    return "Bot is alive"

if __name__ == '__main__':
    import threading
    threading.Thread(target=app.run).start()
    app.run(host='0.0.0.0', port=10000)  # –£–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Ä—Ç –∑–¥–µ—Å—å
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import (
    ReplyKeyboardMarkup,
    KeyboardButton,
    InlineKeyboardMarkup,
    ReplyKeyboardRemove,
    InlineKeyboardButton
)
import asyncio

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
API_TOKEN = "7692869160:AAEZmtbmovXVZu590Ll4mmZbIbsM6xPdjUI"
REF_LINK = "https://bit.ly/edacourier5"  # –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# ---- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã ----
start_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="‚ú® –ü–æ–¥—Ä–æ–±–Ω–µ–µ")]
    ],
    resize_keyboard=True
)

courier_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(
            text="üöÄ –°—Ç–∞—Ç—å –∫—É—Ä—å–µ—Ä–æ–º",
            url=REF_LINK
        )]
    ]
)


# ---- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ ----
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer(
        "<b>üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –¥–ª—è –∫—É—Ä—å–µ—Ä–æ–≤ –Ø–Ω–¥–µ–∫—Å –ï–¥—ã!</b>\n\n"
        "–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å —É—Å–ª–æ–≤–∏—è —Ä–∞–±–æ—Ç—ã –∏ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É.\n\n"
        "–ù–∞–∂–º–∏ <b>¬´–ü–æ–¥—Ä–æ–±–Ω–µ–µ¬ª</b>, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å! üí´",
        reply_markup=start_keyboard,
        parse_mode="HTML"
    )


@dp.message(lambda message: message.text == "‚ú® –ü–æ–¥—Ä–æ–±–Ω–µ–µ")
async def show_details(message: types.Message):
    text = (
        "<b>üî•–í–∞—à–∏ –≤—ã–≥–æ–¥—ã:</b>\n\n"
        "‚úÖ<b>–î–æ 9000‚ÇΩ –≤ –¥–µ–Ω—å + 100% —á–∞–µ–≤—ã—Ö</b> (–≤—ã–ø–ª–∞—Ç—ã –µ–∂–µ–¥–Ω–µ–≤–Ω–æ)\n"
        "‚úÖ<b>–°–≤–æ–±–æ–¥–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫</b> - –≤—ã–±–∏—Ä–∞–π—Ç–µ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è —Ä–∞–±–æ—Ç—ã\n"
        "‚úÖ<b>–†–∞–±–æ—Ç–∞ –≤ —Å–≤–æ—ë–º —Ä–∞–π–æ–Ω–µ</b> - –Ω–∏–∫–∞–∫–∏—Ö –¥–∞–ª—å–Ω–∏—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤\n"
        "‚úÖ<b>–ë–æ–Ω—É—Å—ã –¥–ª—è –∫—É—Ä—å–µ—Ä–æ–≤</b> - —Å–∏—Å—Ç–µ–º–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞, —Ü–µ–ª–∏, —Å–∫–∏–¥–∫–∏\n"
        "‚úÖ<b>–í—ã–±–∏—Ä–∞–π—Ç–µ —Å–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏</b> (–ø–µ—à–∏–π, –≤–µ–ª–æ, –∞–≤—Ç–æ)\n"
        "‚úÖ<b>–õ–µ–≥–∫–∏–µ –∑–∞–∫–∞–∑—ã</b> - –∏–∑ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤, –º–∞–≥–∞–∑–∏–Ω–æ–≤ –∏ –∞–ø—Ç–µ–∫\n\n"
        "üìå–ö–∞–∫ –Ω–∞—á–∞—Ç—å?\n"
        "1Ô∏è‚É£–ù–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É <b>¬´üöÄ –°—Ç–∞—Ç—å –∫—É—Ä—å–µ—Ä–æ–º¬ª</b>\n"
        "2Ô∏è‚É£–ü—Ä–æ–π—Ç–∏ –æ–±—É—á–µ–Ω–∏–µ (5-10 –º–∏–Ω—É—Ç)\n"
        "3Ô∏è‚É£–ó–∞–±—Ä–∞—Ç—å —Å—É–º–∫—É –∏ –Ω–∞—á–∞—Ç—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å!\n\n"
        "üëá<b>–£—Å–ø–µ–π—Ç–µ! –°–≤–æ–±–æ–¥–Ω—ã—Ö –º–µ—Å—Ç –æ—Å—Ç–∞–ª–æ—Å—å: 5.</b>"
    )

    await message.answer(
        text,
        reply_markup=courier_keyboard,
        parse_mode="HTML"
    )


# ---- –ó–∞–ø—É—Å–∫ ----
async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())